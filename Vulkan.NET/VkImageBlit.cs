//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (http://www.swig.org).
// Version 3.0.8
//
// Do not make changes to this file unless you know what you are doing--modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------


public class VkImageBlit : global::System.IDisposable {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;
  protected bool swigCMemOwn;

  internal VkImageBlit(global::System.IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(VkImageBlit obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }

  ~VkImageBlit() {
    Dispose();
  }

  public virtual void Dispose() {
    lock(this) {
      if (swigCPtr.Handle != global::System.IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          vulkanPINVOKE.delete_VkImageBlit(swigCPtr);
        }
        swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
      }
      global::System.GC.SuppressFinalize(this);
    }
  }

  public VkImageSubresourceLayers srcSubresource {
    set {
      vulkanPINVOKE.VkImageBlit_srcSubresource_set(swigCPtr, VkImageSubresourceLayers.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = vulkanPINVOKE.VkImageBlit_srcSubresource_get(swigCPtr);
      VkImageSubresourceLayers ret = (cPtr == global::System.IntPtr.Zero) ? null : new VkImageSubresourceLayers(cPtr, false);
      return ret;
    } 
  }

  public VkOffset3D srcOffsets {
    set {
      vulkanPINVOKE.VkImageBlit_srcOffsets_set(swigCPtr, VkOffset3D.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = vulkanPINVOKE.VkImageBlit_srcOffsets_get(swigCPtr);
      VkOffset3D ret = (cPtr == global::System.IntPtr.Zero) ? null : new VkOffset3D(cPtr, false);
      return ret;
    } 
  }

  public VkImageSubresourceLayers dstSubresource {
    set {
      vulkanPINVOKE.VkImageBlit_dstSubresource_set(swigCPtr, VkImageSubresourceLayers.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = vulkanPINVOKE.VkImageBlit_dstSubresource_get(swigCPtr);
      VkImageSubresourceLayers ret = (cPtr == global::System.IntPtr.Zero) ? null : new VkImageSubresourceLayers(cPtr, false);
      return ret;
    } 
  }

  public VkOffset3D dstOffsets {
    set {
      vulkanPINVOKE.VkImageBlit_dstOffsets_set(swigCPtr, VkOffset3D.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = vulkanPINVOKE.VkImageBlit_dstOffsets_get(swigCPtr);
      VkOffset3D ret = (cPtr == global::System.IntPtr.Zero) ? null : new VkOffset3D(cPtr, false);
      return ret;
    } 
  }

  public VkImageBlit() : this(vulkanPINVOKE.new_VkImageBlit(), true) {
  }

}
