//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (http://www.swig.org).
// Version 3.0.8
//
// Do not make changes to this file unless you know what you are doing--modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------


public class VkAllocationCallbacks : global::System.IDisposable {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;
  protected bool swigCMemOwn;

  internal VkAllocationCallbacks(global::System.IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(VkAllocationCallbacks obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }

  ~VkAllocationCallbacks() {
    Dispose();
  }

  public virtual void Dispose() {
    lock(this) {
      if (swigCPtr.Handle != global::System.IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          vulkanPINVOKE.delete_VkAllocationCallbacks(swigCPtr);
        }
        swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
      }
      global::System.GC.SuppressFinalize(this);
    }
  }

  public SWIGTYPE_p_void pUserData {
    set {
      vulkanPINVOKE.VkAllocationCallbacks_pUserData_set(swigCPtr, SWIGTYPE_p_void.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = vulkanPINVOKE.VkAllocationCallbacks_pUserData_get(swigCPtr);
      SWIGTYPE_p_void ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_void(cPtr, false);
      return ret;
    } 
  }

  public SWIGTYPE_p_f_p_void_size_t_size_t_enum_VkSystemAllocationScope__p_void pfnAllocation {
    set {
      vulkanPINVOKE.VkAllocationCallbacks_pfnAllocation_set(swigCPtr, SWIGTYPE_p_f_p_void_size_t_size_t_enum_VkSystemAllocationScope__p_void.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = vulkanPINVOKE.VkAllocationCallbacks_pfnAllocation_get(swigCPtr);
      SWIGTYPE_p_f_p_void_size_t_size_t_enum_VkSystemAllocationScope__p_void ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_f_p_void_size_t_size_t_enum_VkSystemAllocationScope__p_void(cPtr, false);
      return ret;
    } 
  }

  public SWIGTYPE_p_f_p_void_p_void_size_t_size_t_enum_VkSystemAllocationScope__p_void pfnReallocation {
    set {
      vulkanPINVOKE.VkAllocationCallbacks_pfnReallocation_set(swigCPtr, SWIGTYPE_p_f_p_void_p_void_size_t_size_t_enum_VkSystemAllocationScope__p_void.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = vulkanPINVOKE.VkAllocationCallbacks_pfnReallocation_get(swigCPtr);
      SWIGTYPE_p_f_p_void_p_void_size_t_size_t_enum_VkSystemAllocationScope__p_void ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_f_p_void_p_void_size_t_size_t_enum_VkSystemAllocationScope__p_void(cPtr, false);
      return ret;
    } 
  }

  public SWIGTYPE_p_f_p_void_p_void__void pfnFree {
    set {
      vulkanPINVOKE.VkAllocationCallbacks_pfnFree_set(swigCPtr, SWIGTYPE_p_f_p_void_p_void__void.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = vulkanPINVOKE.VkAllocationCallbacks_pfnFree_get(swigCPtr);
      SWIGTYPE_p_f_p_void_p_void__void ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_f_p_void_p_void__void(cPtr, false);
      return ret;
    } 
  }

  public SWIGTYPE_p_f_p_void_size_t_enum_VkInternalAllocationType_enum_VkSystemAllocationScope__void pfnInternalAllocation {
    set {
      vulkanPINVOKE.VkAllocationCallbacks_pfnInternalAllocation_set(swigCPtr, SWIGTYPE_p_f_p_void_size_t_enum_VkInternalAllocationType_enum_VkSystemAllocationScope__void.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = vulkanPINVOKE.VkAllocationCallbacks_pfnInternalAllocation_get(swigCPtr);
      SWIGTYPE_p_f_p_void_size_t_enum_VkInternalAllocationType_enum_VkSystemAllocationScope__void ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_f_p_void_size_t_enum_VkInternalAllocationType_enum_VkSystemAllocationScope__void(cPtr, false);
      return ret;
    } 
  }

  public SWIGTYPE_p_f_p_void_size_t_enum_VkInternalAllocationType_enum_VkSystemAllocationScope__void pfnInternalFree {
    set {
      vulkanPINVOKE.VkAllocationCallbacks_pfnInternalFree_set(swigCPtr, SWIGTYPE_p_f_p_void_size_t_enum_VkInternalAllocationType_enum_VkSystemAllocationScope__void.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = vulkanPINVOKE.VkAllocationCallbacks_pfnInternalFree_get(swigCPtr);
      SWIGTYPE_p_f_p_void_size_t_enum_VkInternalAllocationType_enum_VkSystemAllocationScope__void ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_f_p_void_size_t_enum_VkInternalAllocationType_enum_VkSystemAllocationScope__void(cPtr, false);
      return ret;
    } 
  }

  public VkAllocationCallbacks() : this(vulkanPINVOKE.new_VkAllocationCallbacks(), true) {
  }

}
