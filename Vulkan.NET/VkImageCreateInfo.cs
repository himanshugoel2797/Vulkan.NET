//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (http://www.swig.org).
// Version 3.0.8
//
// Do not make changes to this file unless you know what you are doing--modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------


public class VkImageCreateInfo : global::System.IDisposable {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;
  protected bool swigCMemOwn;

  internal VkImageCreateInfo(global::System.IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(VkImageCreateInfo obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }

  ~VkImageCreateInfo() {
    Dispose();
  }

  public virtual void Dispose() {
    lock(this) {
      if (swigCPtr.Handle != global::System.IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          vulkanPINVOKE.delete_VkImageCreateInfo(swigCPtr);
        }
        swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
      }
      global::System.GC.SuppressFinalize(this);
    }
  }

  public VkStructureType sType {
    set {
      vulkanPINVOKE.VkImageCreateInfo_sType_set(swigCPtr, (int)value);
    } 
    get {
      VkStructureType ret = (VkStructureType)vulkanPINVOKE.VkImageCreateInfo_sType_get(swigCPtr);
      return ret;
    } 
  }

  public SWIGTYPE_p_void pNext {
    set {
      vulkanPINVOKE.VkImageCreateInfo_pNext_set(swigCPtr, SWIGTYPE_p_void.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = vulkanPINVOKE.VkImageCreateInfo_pNext_get(swigCPtr);
      SWIGTYPE_p_void ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_void(cPtr, false);
      return ret;
    } 
  }

  public SWIGTYPE_p_uint32_t flags {
    set {
      vulkanPINVOKE.VkImageCreateInfo_flags_set(swigCPtr, SWIGTYPE_p_uint32_t.getCPtr(value));
      if (vulkanPINVOKE.SWIGPendingException.Pending) throw vulkanPINVOKE.SWIGPendingException.Retrieve();
    } 
    get {
      SWIGTYPE_p_uint32_t ret = new SWIGTYPE_p_uint32_t(vulkanPINVOKE.VkImageCreateInfo_flags_get(swigCPtr), true);
      if (vulkanPINVOKE.SWIGPendingException.Pending) throw vulkanPINVOKE.SWIGPendingException.Retrieve();
      return ret;
    } 
  }

  public VkImageType imageType {
    set {
      vulkanPINVOKE.VkImageCreateInfo_imageType_set(swigCPtr, (int)value);
    } 
    get {
      VkImageType ret = (VkImageType)vulkanPINVOKE.VkImageCreateInfo_imageType_get(swigCPtr);
      return ret;
    } 
  }

  public VkFormat format {
    set {
      vulkanPINVOKE.VkImageCreateInfo_format_set(swigCPtr, (int)value);
    } 
    get {
      VkFormat ret = (VkFormat)vulkanPINVOKE.VkImageCreateInfo_format_get(swigCPtr);
      return ret;
    } 
  }

  public VkExtent3D extent {
    set {
      vulkanPINVOKE.VkImageCreateInfo_extent_set(swigCPtr, VkExtent3D.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = vulkanPINVOKE.VkImageCreateInfo_extent_get(swigCPtr);
      VkExtent3D ret = (cPtr == global::System.IntPtr.Zero) ? null : new VkExtent3D(cPtr, false);
      return ret;
    } 
  }

  public SWIGTYPE_p_uint32_t mipLevels {
    set {
      vulkanPINVOKE.VkImageCreateInfo_mipLevels_set(swigCPtr, SWIGTYPE_p_uint32_t.getCPtr(value));
      if (vulkanPINVOKE.SWIGPendingException.Pending) throw vulkanPINVOKE.SWIGPendingException.Retrieve();
    } 
    get {
      SWIGTYPE_p_uint32_t ret = new SWIGTYPE_p_uint32_t(vulkanPINVOKE.VkImageCreateInfo_mipLevels_get(swigCPtr), true);
      if (vulkanPINVOKE.SWIGPendingException.Pending) throw vulkanPINVOKE.SWIGPendingException.Retrieve();
      return ret;
    } 
  }

  public SWIGTYPE_p_uint32_t arrayLayers {
    set {
      vulkanPINVOKE.VkImageCreateInfo_arrayLayers_set(swigCPtr, SWIGTYPE_p_uint32_t.getCPtr(value));
      if (vulkanPINVOKE.SWIGPendingException.Pending) throw vulkanPINVOKE.SWIGPendingException.Retrieve();
    } 
    get {
      SWIGTYPE_p_uint32_t ret = new SWIGTYPE_p_uint32_t(vulkanPINVOKE.VkImageCreateInfo_arrayLayers_get(swigCPtr), true);
      if (vulkanPINVOKE.SWIGPendingException.Pending) throw vulkanPINVOKE.SWIGPendingException.Retrieve();
      return ret;
    } 
  }

  public VkSampleCountFlagBits samples {
    set {
      vulkanPINVOKE.VkImageCreateInfo_samples_set(swigCPtr, (int)value);
    } 
    get {
      VkSampleCountFlagBits ret = (VkSampleCountFlagBits)vulkanPINVOKE.VkImageCreateInfo_samples_get(swigCPtr);
      return ret;
    } 
  }

  public VkImageTiling tiling {
    set {
      vulkanPINVOKE.VkImageCreateInfo_tiling_set(swigCPtr, (int)value);
    } 
    get {
      VkImageTiling ret = (VkImageTiling)vulkanPINVOKE.VkImageCreateInfo_tiling_get(swigCPtr);
      return ret;
    } 
  }

  public SWIGTYPE_p_uint32_t usage {
    set {
      vulkanPINVOKE.VkImageCreateInfo_usage_set(swigCPtr, SWIGTYPE_p_uint32_t.getCPtr(value));
      if (vulkanPINVOKE.SWIGPendingException.Pending) throw vulkanPINVOKE.SWIGPendingException.Retrieve();
    } 
    get {
      SWIGTYPE_p_uint32_t ret = new SWIGTYPE_p_uint32_t(vulkanPINVOKE.VkImageCreateInfo_usage_get(swigCPtr), true);
      if (vulkanPINVOKE.SWIGPendingException.Pending) throw vulkanPINVOKE.SWIGPendingException.Retrieve();
      return ret;
    } 
  }

  public VkSharingMode sharingMode {
    set {
      vulkanPINVOKE.VkImageCreateInfo_sharingMode_set(swigCPtr, (int)value);
    } 
    get {
      VkSharingMode ret = (VkSharingMode)vulkanPINVOKE.VkImageCreateInfo_sharingMode_get(swigCPtr);
      return ret;
    } 
  }

  public SWIGTYPE_p_uint32_t queueFamilyIndexCount {
    set {
      vulkanPINVOKE.VkImageCreateInfo_queueFamilyIndexCount_set(swigCPtr, SWIGTYPE_p_uint32_t.getCPtr(value));
      if (vulkanPINVOKE.SWIGPendingException.Pending) throw vulkanPINVOKE.SWIGPendingException.Retrieve();
    } 
    get {
      SWIGTYPE_p_uint32_t ret = new SWIGTYPE_p_uint32_t(vulkanPINVOKE.VkImageCreateInfo_queueFamilyIndexCount_get(swigCPtr), true);
      if (vulkanPINVOKE.SWIGPendingException.Pending) throw vulkanPINVOKE.SWIGPendingException.Retrieve();
      return ret;
    } 
  }

  public SWIGTYPE_p_uint32_t pQueueFamilyIndices {
    set {
      vulkanPINVOKE.VkImageCreateInfo_pQueueFamilyIndices_set(swigCPtr, SWIGTYPE_p_uint32_t.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = vulkanPINVOKE.VkImageCreateInfo_pQueueFamilyIndices_get(swigCPtr);
      SWIGTYPE_p_uint32_t ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_uint32_t(cPtr, false);
      return ret;
    } 
  }

  public VkImageLayout initialLayout {
    set {
      vulkanPINVOKE.VkImageCreateInfo_initialLayout_set(swigCPtr, (int)value);
    } 
    get {
      VkImageLayout ret = (VkImageLayout)vulkanPINVOKE.VkImageCreateInfo_initialLayout_get(swigCPtr);
      return ret;
    } 
  }

  public VkImageCreateInfo() : this(vulkanPINVOKE.new_VkImageCreateInfo(), true) {
  }

}
